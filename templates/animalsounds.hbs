{{!-- templates/animalsounds.hbs --}}

<style>
  /* Back Button */
  .back-btn {
    display: flex;
    align-items: center;
    background-color: #f8f9fa;
    color: #333;
    border: none;
    padding: 8px 8px;
    font-size: 16px;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    font-weight: bold;
    margin-bottom: 20px;
  }
  .back-btn:hover {
    background-color: #e0e0e0;
    transform: translateX(-3px);
  }
  .back-btn::before {
    content: "‚Æê";
    margin-right: 8px;
    font-size: 18px;
  }

  /* Header Section */
  .header-container {
    background-color: #ff7878;
    padding: 20px;
    border-radius: 20px;
    width: fit-content;
    text-align: center;
    margin-top: 10px;
    margin-bottom: 10px;
    margin-left: 330px;
  }
  .header-container h1 {
    color: white;
    margin: 0;
  }
  .header-container h6 {
    color: white;
    font-style: italic;
    opacity: 0.75;
    margin: 5px 0 0;
  }

  /* Game Container */
  .game-container {
    max-width: 600px;
    width: 100%;
    padding: 20px;
    margin: 0 auto;
    background: white;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  /* Animal Rows */
  .animal {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    margin-bottom: 40px;
  }
  .animal img {
    width: 50px;
    height: 50px;
  }

  /* Buttons */
  button.play-sound,
  button.record-sound,
  button.play-recording {
    background: none;
    border: none;
    width: 25px;
    height: 25px;
    padding: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 5px;
  }
  button img {
    width: 90%;
    height: 90%;
    object-fit: contain;
  }
</style>

<!-- Partial content only (no <html>, <head>, <body>) -->
<button onclick="loadPage('apraxiagameselection')" class="back-btn">
  Back to Apraxia Unit
</button>

<div class="header-container">
  <h1>Apraxia Unit - Animal Sounds</h1>
  <h6>Boost Speech Clarity with Fun Animal Sounds</h6>
</div>

<div class="game-container">
  <!-- CAT -->
  <div class="animal" id="cat">
    <img src="cat-icon.png" alt="Cat">
    <button class="play-sound" data-sound="cat-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="cat">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="cat" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- DOG -->
  <div class="animal" id="dog">
    <img src="dog-icon.png" alt="Dog">
    <button class="play-sound" data-sound="dog-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="dog">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="dog" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- BIRD -->
  <div class="animal" id="bird">
    <img src="bird-icon.png" alt="Bird">
    <button class="play-sound" data-sound="bird-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="bird">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="bird" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- ELEPHANT -->
  <div class="animal" id="elephant">
    <img src="elephant-icon.png" alt="Elephant">
    <button class="play-sound" data-sound="elephant-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="elephant">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="elephant" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- HORSE -->
  <div class="animal" id="horse">
    <img src="horse-icon.png" alt="Horse">
    <button class="play-sound" data-sound="horse-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="horse">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="horse" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>

  <!-- DUCK -->
  <div class="animal" id="duck">
    <img src="duck-icon.png" alt="Duck">
    <button class="play-sound" data-sound="duck-sound.mp3">
      <img src="playsound-button.png" alt="Play Sound">
    </button>
    <button class="record-sound" data-animal="duck">
      <img src="recordsound-button.png" alt="Record Sound">
    </button>
    <button class="play-recording" data-animal="duck" disabled>
      <img src="playrecording-button.png" alt="Play Recording">
    </button>
  </div>
</div>

<script>
  
  function startGameAnimalSounds(){

  console.log("animalsounds-script.js loaded!");

// Immediately attach event listeners
document.querySelectorAll(".play-sound").forEach((button) => {
  button.addEventListener("click", () => {
    const soundPath = button.dataset.sound;
    console.log(`Attempting to play: ${soundPath}`);
    const sound = new Audio(soundPath);
    sound
      .play()
      .then(() => {
        console.log(`Playing sound: ${soundPath}`);
      })
      .catch((error) => {
        console.error(`Error playing sound: ${soundPath}`, error);
      });
  });
});

const recordings = new Map();

document.querySelectorAll(".animal").forEach((animalDiv) => {
  const recordButton = animalDiv.querySelector(".record-sound");
  const playButton = animalDiv.querySelector(".play-recording");
  const animal = recordButton.dataset.animal;

  recordButton.addEventListener("click", async () => {
    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
      alert("Microphone access is not supported in your browser.");
      return;
    }
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      const mediaRecorder = new MediaRecorder(stream);
      const chunks = [];

      mediaRecorder.ondataavailable = (e) => chunks.push(e.data);
      mediaRecorder.onstop = () => {
        const audioBlob = new Blob(chunks, { type: "audio/wav" });
        const audioUrl = URL.createObjectURL(audioBlob);
        recordings.set(animal, audioUrl);
        playButton.disabled = false;
        console.log(`Recording saved for ${animal}.`);
      };

      mediaRecorder.start();
      alert(`Recording started for ${animal}. Click OK to stop.`);

      setTimeout(() => {
        mediaRecorder.stop();
        stream.getTracks().forEach((track) => track.stop());
        console.log(`Recording stopped for ${animal}.`);
      }, 3000);
    } catch (error) {
      console.error(`Error recording for ${animal}:`, error);
      alert("Could not access your microphone. Please check permissions.");
    }
  });

  playButton.addEventListener("click", () => {
    if (recordings.has(animal)) {
      const audio = new Audio(recordings.get(animal));
      audio.play();
      console.log(`Playing recording for ${animal}.`);
    } else {
      alert(`No recording available for ${animal}.`);
    }
  });
});
  
}
</script>