<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SPEECH UP</title>
    <link rel="icon" href="tabpic.png" type="image/png">


    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

    <!-- FullCalendar CSS -->
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
    
    <style>
        

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }

        body {
            display: flex;
            height: 100vh;
            background-color: #eef3fa;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background-color: #2c3e50;
            color: white;
            padding: 20px;
            display: flex;
            flex-direction: column;
            position: fixed;
            height: 100vh;
            left: 0;
            top: 0;
            transition: transform 0.3s ease-in-out;
        }

        .sidebar h3 {
            margin-bottom: 20px;
            text-align: center;
        }

        .sidebar a {
            text-decoration: none;
            color: white;
            padding: 10px;
            margin: 5px 0;
            display: block;
            border-radius: 5px;
            cursor: pointer;
        }

        .sidebar a:hover {
            background-color: #34495e;
        }

        /* Hidden Sidebar */
        .sidebar.hidden {
            transform: translateX(-100%);
        }

        /* Sidebar Toggle Button */
        .sidebar-toggle {
            position: fixed;
            top: 300px;
            left: 255px;
            background-color: #2c3e50;
            color: white;
            border: none;
            cursor: pointer;
            font-size: 10px;
            padding: 5px;
            border-radius: 50%;
            transition: left 0.3s ease-in-out;
        }

        .sidebar.hidden + .sidebar-toggle {
            left: 10px;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 20px;
            margin-left: 260px;
            transition: margin-left 0.3s ease-in-out;
            width: 100%;
        }

        .sidebar.hidden ~ .main-content {
            margin-left: 20px;
        }

        /* Top Bar */
        .top-bar {
            background-color: #fff;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        /* Search Bar */
        .search-container {
            display: flex;
            align-items: center;
            background-color: #eef3fa;
            border-radius: 20px;
            padding: 1px 10px;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .search-container input {
            border: none;
            background: transparent;
            padding: 8px;
            outline: none;
            width: 200px;
        }

        .search-container button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            color: #555;
        }

        /* Welcome Text */
        .welcome-section {
            margin-top: 20px;
        }

        h2 {
            color: #333;
        }

        /* Profile Section */
        .profile-container {
            display: flex;
            align-items: center;
            cursor: pointer;
        }

        .profile-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #dcd7d9;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-weight: bold;
            font-size: 18px;
            cursor: pointer;
        }

        .dropdown-menu {
            position: absolute;
            top: 60px;
            right: 0;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: none;
            width: 150px;
        }

        .dropdown-menu a {
            display: block;
            padding: 10px;
            text-decoration: none;
            color: #333;
            text-align: left;
        }

        .dropdown-menu a:hover {
            background-color: #f1f1f1;
        }

        .dropdown-menu.active {
            display: block;
        }

        .logout-btn {
            display: block;
            padding: 10px;
            color: white;
            background-color: red;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
        }

        .logout-btn:hover {
            background-color: darkred;
        }

        /* Dynamic Content */
        .content-area {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

        .btn {
            display: inline-block;
            padding: 10px 10px;
            background-color: #df1645; /* Match Upload button */
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 15px;
            transition: background-color 0.3s ease;
        }         

        .btn:hover {
        background-color: #ff003c; /* Darker shade on hover */
        }
        
        /* Appointment Request Form */
        .appointment-form {
            max-width: 400px;
            margin: 20px auto;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }
        
        .appointment-form label {
            font-weight: bold;
            display: block;
            margin-top: 10px;
        }
        
    </style>

</head>

<body>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <img src="speechuplogo.png" alt="SpeechUp Logo" class="speechup-logo">
        <a href="/patienthome" onclick="loadPage('home')">Home</a>
        <a href="#" onclick="loadPage('therapists')">Therapists</a>
        <a href="#" onclick="loadPage('courses')">Courses</a>
        <a href="#" onclick="loadPage('communityforum')">Community Forum</a>
    </div>

    <!-- Sidebar Toggle Button -->
    <button class="sidebar-toggle" id="sidebarToggle" onclick="toggleSidebar()">&#9664;</button>

    <!-- Main Content -->
    <div class="main-content" id="mainContent">
        
        <!-- Top Bar with Search and Profile -->
        <div class="top-bar">
            <div class="search-container">
                <input type="text" placeholder="Search..." id="searchInput">
                <button onclick="searchFunction()">üîç</button>
            </div>
            <div class="profile-container" onclick="toggleDropdown()">
                <img class="profile-icon" src="{{profileImage}}" alt="Profile">
                <div class="dropdown-menu" id="dropdownMenu">
                    <a href="#" onclick="loadPage('patientprofile'); return false;">View Profile</a>
                    <a href="/logout" class="logout-btn">Log Out</a>
                </div>
            </div>
        </div>

        <!-- Dynamic Content Area -->
        <div class="content-area" id="contentArea">
            <h2>Welcome back {{firstName}}!</h2>
            <br>
            <h3>Are you ready to start a therapy session with your therapist?</h3>
            <br>
            <h3>Click on the button below to set your appointment.</h3>
            <br>
            <button class="btn" onclick="loadPage('setappointment')">Set Appointment</button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

     <!-- Hidden input to store patient email -->
        <input type="hidden" id="patientEmail" value="{{email}}">


    <script>
        
        function toggleSidebar() {
            document.getElementById("sidebar").classList.toggle("hidden");
            document.getElementById("sidebarToggle").innerHTML = 
                document.getElementById("sidebar").classList.contains("hidden") ? "&#9654;" : "&#9664;";
        }

        function loadPage(page) {
        fetch(`/content/${page}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Page not found");
                }
                return response.text();
            })
            .then(html => {
                document.getElementById("contentArea").innerHTML = html;

                  // Add event listeners AFTER the content is loaded
            if (page === 'courses') {  // Check if it's the courses page
                addCoursesEventListeners(); // Call a new function
            }
            if (page === 'apraxiagameselection') {
                addApraxiaEventListeners();
            }
            if (page === 'dysarthriagameselection') {
                addDysarthriaEventListeners();
            }
            if (page === 'aphasiagameselection') {
                addAphasiaEventListeners();
            }
            if (page === 'setappointment') {
                console.log("Appointment form loaded.");
                
            }

            })
            .catch(error => {
                console.error("Error loading page:", error);
                document.getElementById("contentArea").innerHTML = "<h2>Error loading content</h2>";
            });
    }

        function toggleDropdown() {
            document.getElementById("dropdownMenu").classList.toggle("active");
        }

        function searchFunction() {
            alert("Searching: " + document.getElementById("searchInput").value);
        }

        function addCoursesEventListeners() {
        const apraxiaButton = document.querySelector('.button-group button:nth-child(1)'); // Select Apraxia button
    if (apraxiaButton) {
        apraxiaButton.addEventListener('click', () => {
            loadPage('apraxiagameselection');
        });
    }

        const dysarthriaButton = document.querySelector('.button-group button:nth-child(2)'); // Select Dysarthria button
    if (dysarthriaButton) {
        dysarthriaButton.addEventListener('click', () => {
            loadPage('dysarthriagameselection');
        });
    }

        const aphasiaButton = document.querySelector('.button-group button:nth-child(3)'); // Select Aphasia button
    if (aphasiaButton) {
        aphasiaButton.addEventListener('click', () => {
            loadPage('aphasiagameselection');
        });
    }

}

        function addApraxiaEventListeners(){
        const animalSoundsButton = document.querySelector('.button-group button:nth-child(1)');
    if(animalSoundsButton){
        animalSoundsButton.addEventListener('click', () => {
            loadPage('animalsounds'); // Load the animal sounds page
        });
    }

        const bookReadingButton = document.querySelector('.button-group button:nth-child(2)');
    if(bookReadingButton){
        bookReadingButton.addEventListener('click', () => {
            loadPage('bookreading'); // Load the book reading page
        });
    }
}

        function addDysarthriaEventListeners(){
        const wordSearchButton = document.querySelector('.button-group button:nth-child(1)');
    if(wordSearchButton){
        wordSearchButton.addEventListener('click', () => {
            loadPage('wordsearch'); 
        });
    }

        const wordFlipbookButton = document.querySelector('.button-group button:nth-child(2)');
    if(wordFlipbookButton){
        wordFlipbookButton.addEventListener('click', () => {
            loadPage('wordflipbook');
        });
    }
}

        function addAphasiaEventListeners(){
        const matchingGamesButton = document.querySelector('.button-group button:nth-child(1)');
    if(matchingGamesButton){
        matchingGamesButton.addEventListener('click', () => {
            loadPage('matchinggames');
        });
    }

        const tongueTwistersButton = document.querySelector('.button-group button:nth-child(2)');
    if(tongueTwistersButton){
        tongueTwistersButton.addEventListener('click', () => {
            loadPage('tonguetwisters');
        });
    }
}

        function enableEditing() {
        document.getElementById("firstName").disabled = false;
        document.getElementById("lastName").disabled = false;
        document.getElementById("password").disabled = false;

        document.getElementById("editProfile").style.display = "none";
        document.getElementById("updateProfile").style.display = "inline-block";
    }

        async function updateProfile() {
        const firstName = document.getElementById("firstName").value;
        const lastName = document.getElementById("lastName").value;
        const password = document.getElementById("password").value;

        const response = await fetch("/update-profile-patient", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ firstName, lastName, password })
        });

        const result = await response.json();

        if (result.success) {
            alert("Profile updated successfully!");
            window.location.reload();
        } else {
            alert("Error updating profile.");
        }
    }

        async function deleteAccount() {
        if (confirm("Are you sure you want to delete your account? This action cannot be undone.")) {
            const response = await fetch("/delete-account-patient", { method: "POST" });

            const result = await response.json();

            if (result.success) {
                alert("Account deleted successfully!");
                window.location.href = "/";
            } else {
                alert("Error deleting account.");
            }
        }
    }

        async function verifyPatientPassword() {
        const enteredPassword = document.getElementById("verifyPassword").value;
        
        // Send password for verification
        const response = await fetch("/verify-password-patient", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ password: enteredPassword })
        });

        const result = await response.json();

        if (result.success) {
            document.getElementById("passwordField").value = enteredPassword;
            document.getElementById("togglePassword").disabled = false;

             // Show success message using a popup (alert)
        alert("Password verified successfully!"); // Simple alert popup

        } else {
            alert("Incorrect password!");
        }
    }

        function uploadPatientProfileImage(event) {
        event.preventDefault(); // Prevent form from reloading the page
    
        let formData = new FormData();
        let fileInput = document.getElementById("profileImageInput").files[0];
    
        if (!fileInput) {
            alert("Please select an image to upload.");
            return;
        }
    
        formData.append("profileImage", fileInput);
    
        fetch("/upload-patient-profile", {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
    
                let profileImageElement = document.getElementById("profileImage");
                if (profileImageElement) {
                    profileImageElement.src = `${data.profileImage}?t=${new Date().getTime()}`;
                }
    
                let homeProfileIcon = document.querySelector(".profile-icon");
                if (homeProfileIcon) {
                    homeProfileIcon.src = `${data.profileImage}?t=${new Date().getTime()}`;
                }
    
                alert("Profile image updated successfully!");
            } else {
                alert("Error uploading image: " + (data.error || "Unknown error"));
            }
        })
        .catch(error => {
            console.error("Upload error:", error);
            alert("An error occurred while uploading.");
        });
    }
    
        document.addEventListener("DOMContentLoaded", function () {
            function updateFileName() {
                let fileInput = document.getElementById("profileImageInput");
                let fileNameDisplay = document.getElementById("file-name");
    
            if (fileInput && fileNameDisplay) {
                if (fileInput.files.length > 0) {
                    fileNameDisplay.textContent = fileInput.files[0].name; // ‚úÖ Update filename
                } else {
                    fileNameDisplay.textContent = "No file chosen"; // ‚úÖ Reset text
                }
            }
        }
    
        document.body.addEventListener("change", function (event) {
            if (event.target && event.target.id === "profileImageInput") {
                updateFileName();
            }
        });
    });

        function togglePassword() {
        var passwordField = document.getElementById("passwordField");
        var toggleButton = document.getElementById("togglePassword");

        if (passwordField.type === "*******") {
            passwordField.type = "text";
            toggleButton.innerText = "üôà"; // Hide icon
        } else {
            passwordField.type = "*******";
            toggleButton.innerText = "üëÅ"; // Show icon
        }
    }

        document.addEventListener("click", function(event) {
        var dropdown = document.getElementById("dropdownMenu");
        var profileContainer = document.querySelector(".profile-container");

        if (!profileContainer.contains(event.target)) {
            dropdown.classList.remove("active");
        }
    });

    function requestAppointment() {
        let therapistEmail = document.getElementById("therapistEmail").value;
        let selectedDate = document.getElementById("selectedDate").value;
        let selectedTime = document.getElementById("selectedTime").value;
        let patientEmail = document.getElementById("patientEmail")?.value; // Get from session

        console.log("üì¢ Sending Appointment Request:", { therapistEmail, patientEmail, date: selectedDate, time: selectedTime });

        // üõë Validate inputs
        if (!therapistEmail || !selectedDate || !selectedTime || !patientEmail) {
            alert("Please fill in all fields before requesting an appointment.");
            return;
        }

        fetch("/add-appointment", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                therapistEmail,
                patientEmail,
                date: selectedDate,
                time: selectedTime,
                status: "Pending"
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert("Appointment request sent! Waiting for therapist approval.");
                location.reload();
            } else {
                alert("Error submitting appointment: " + data.error);
            }
        })
        .catch(error => console.error("‚ùå Error:", error));
    }
    </script>

</body>
</html>